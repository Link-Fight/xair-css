html{
  -ms-text-size-adjust:100%;
  -webkit-text-size-adjust:100%;
}
body{
  line-height:1.6;
}
body,
html,
section{
  height:100%;
}
*{
  margin:0;
  padding:0;
  box-sizing:border-box;
  -webkit-overflow-scrolling:touch;
}
a img{
  border:0;
}
a{
  text-decoration:none;
  -webkit-tap-highlight-color:rgba(0, 0, 0, 0);
}
input{
  -webkit-tap-highlight-color:transparent;
}
input:focus{
  outline:0;
  -webkit-tap-highlight-color:transparent;
}
li,
ul{
  margin:0;
  padding:0;
  list-style:none;
}
.fr{
  float:right;
}
.fl{
  float:left;
}
.clearfix{
  zoom:1;
}
.clearfix:after{
  content:"";
  display:block;
  clear:both;
  height:0;
}
.xa-t__ellipsis-1{
  overflow:hidden;
  text-overflow:ellipsis;
  display:-webkit-box;
  -webkit-box-orient:vertical;
  -webkit-line-clamp:1;
}
.xa-view{
  display:-webkit-box;
  display:-webkit-flex;
  display:flex;
  -webkit-box-orient:vertical;
  -webkit-box-direction:normal;
  -webkit-flex-direction:column;
  flex-direction:column;
}
.xa-view__body{
  -webkit-box-flex:1;
  -webkit-flex:1;
  flex:1;
}
.xa-cell{
  display:-webkit-box;
  display:-webkit-flex;
  display:flex;
  -webkit-box-orient:horizontal;
  -webkit-box-direction:normal;
  -webkit-flex-direction:row;
  flex-direction:row;
}
.xa-cell__body{
  -webkit-box-flex:1;
  -webkit-flex:1;
  flex:1;
}
.xa-flex-1{
  -webkit-box-flex:1;
  -webkit-flex:1;
  flex:1;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
